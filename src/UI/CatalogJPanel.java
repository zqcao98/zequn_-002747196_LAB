/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Medicine;
import Model.MedicineCatalog;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zequncao
 */
public class CatalogJPanel extends javax.swing.JPanel {

    private Application application;

    /**
     * Creates new form CatalogJPanel
     */
    
    DefaultTableModel medTableModel;
    
    CatalogJPanel(Application application) {
        initComponents();
        
        this.application = application;
        this.medTableModel = (DefaultTableModel) medicineCatalog.getModel();
        
        displayMedicineCatalog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medicineCatalog = new javax.swing.JTable();
        fieldName = new javax.swing.JTextField();
        fieldDosage = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medicineCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Dosage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(medicineCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, -1, -1));

        fieldName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldNameFocusLost(evt);
            }
        });
        fieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNameActionPerformed(evt);
            }
        });
        add(fieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 140, 40));

        fieldDosage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldDosageFocusLost(evt);
            }
        });
        add(fieldDosage, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 140, 40));

        AddBtn.setText("ADD");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        add(AddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        add(DeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 500, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        String name = fieldName.getText();
        String dosage = fieldDosage.getText();
        
        MedicineCatalog catalog = this.application.getCatalog();
        
        catalog.createMedicine(name, Double.valueOf(dosage));
        
        displayMedicineCatalog();
    }//GEN-LAST:event_AddBtnActionPerformed

    private void fieldNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldNameFocusLost
        // TODO add your handling code here:
        
        String name = fieldName.getText();
        
        Boolean isUnique = this.application.getCatalog().checkIfMedicineUnique(name);
        
        if(isUnique) {
            
        } else {
            fieldName.setText("");
            JOptionPane.showMessageDialog(null,"Medicine already exists");
        }
    }//GEN-LAST:event_fieldNameFocusLost

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = medicineCatalog.getSelectedRow();
        
        if (selectedRow >= 0) {
            // we will delete the object
            
            Medicine med = (Medicine) medicineCatalog.getValueAt(selectedRow, 0);
            
            this.application.getCatalog().removeMedicine(med.getMedicineName());
            
            displayMedicineCatalog();
        } else {
            
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void fieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fieldNameActionPerformed

    private void fieldDosageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldDosageFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDosageFocusLost

    public void displayMedicineCatalog() {
        // check if the catatlog is not empty
        
        
        ArrayList<Medicine> medicines = this.application.getCatalog().getMedicineList();
        
        if(medicines.size() > 0) {
            //popultate
            
            medTableModel.setRowCount(0);
            
            for (Medicine med: medicines) {
                
                
                Object row[] = new Object[2];
                row[0] = med;
                row[1] = med.getDosage();
                
                medTableModel.addRow(row);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField fieldDosage;
    private javax.swing.JTextField fieldName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicineCatalog;
    // End of variables declaration//GEN-END:variables
}
